<Window x:Class="WPF_Control_Style_Practice.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Control_Style_Practice"
        mc:Ignorable="d"
        Title="MainWindow" Height="355" Width="917">
    <Window.Resources>
        <Style BasedOn="{StaticResource SimpleCheckBoxStyle}" TargetType="{x:Type local:Switch}">
            <Setter Property="Foreground" Value="#FF9800"/>
        </Style>

        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">

                        <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                            <Border x:Name="MainBorder" CornerRadius="5" Background="{TemplateBinding Background}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="2" Direction="280" ShadowDepth="3" Opacity="0.1"></DropShadowEffect>
                                </Border.Effect>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"  ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray" TargetName="MainBorder"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.50" TargetName="contentPresenter"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#FFBFBFBF" TargetName="MainBorder"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Background" Value="#7E8AA2" TargetName="MainBorder"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BasicTabControlStyle"  TargetType="{x:Type TabControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Border x:Name="contentPanel" BorderThickness="0" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BasicTabItemStyle"  TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border"
                            BorderThickness="4,0,0,0"
                            BorderBrush="#2172B1"
                            CornerRadius="0">
                            <ContentPresenter x:Name="ContentSite"
                                            ContentSource="Header"
                                            HorizontalAlignment="Stretch"  VerticalAlignment="Center"
                                            Margin="20,4,20,5"
                                            RecognizesAccessKey="True"
                                            TextBlock.FontSize="10" TextBlock.Foreground="Black"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background"      Value="White" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger Property="TabItem.IsMouseOver" Value="True" SourceName="Border">
                                <Setter TargetName="Border" Property="Background"      Value="Gray" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,0" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background"                Value="#FFE5E5E5" />
                                <Setter TargetName="Border" Property="BorderThickness"           Value="0,4,0,0" />
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="Black" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="White">
                            <ContentPresenter x:Name="Presenter"
                                              VerticalAlignment="Center" 
                                              TextBlock.TextAlignment="Center" 
                                              TextBlock.FontSize="15"
                                              ></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tabControl" Style="{StaticResource BasicTabControlStyle}" Margin="10,24,10,10" BorderBrush="Black">
            <TabItem Style="{StaticResource BasicTabItemStyle}" Header="기본 설정" BorderBrush="#FFACACAC">
                <Grid Background="#FFE5E5E5">
                    <Button x:Name="button" Content="Button" HorizontalAlignment="Left" Height="32" Margin="22,33,0,0" VerticalAlignment="Top" Width="129"/>

                    <local:Switch  Width="54" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="363,111,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Height="21"/>
                    <RadioButton x:Name="radioButton" Content="소리 재생" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="22,85,0,0" Width="395" Background="White"/>
                    <RadioButton x:Name="radioButton1" Content="팝업으로 띄우기" HorizontalAlignment="Left" Margin="22,152,0,0" VerticalAlignment="Top" Width="395" Background="White" Height="27"/>
                    <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="25,116,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="특별한 날 소리 다르게 재생하기"/>
                </Grid>
            </TabItem>
            <TabItem Style="{StaticResource BasicTabItemStyle}" Header="패턴 관리">
                <Grid Background="#FFE5E5E5">
                    <Label x:Name="label" Content="Label" HorizontalAlignment="Left" Margin="144,72,0,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
        </TabControl>

        <TabControl Grid.Column="1">
            <TabItem Header="기본 설정"></TabItem>
            <TabItem Header="패턴 관리"></TabItem>
        </TabControl>
    </Grid>
</Window>
